#!/bin/bash
# FastLED JavaScript Linting Script (Node.js + ESLint - FAST!)

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}FAST FastLED JavaScript Linting (Node.js + ESLint - FAST!)${NC}"

# Check if ESLint is installed (handle Windows .cmd extension)
ESLINT_EXE=""
if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" || "$OSTYPE" == "win32" ]]; then
    ESLINT_EXE=".js-tools/node_modules/.bin/eslint.cmd"
else
    ESLINT_EXE=".js-tools/node_modules/.bin/eslint"
fi

if [ ! -f "$ESLINT_EXE" ]; then
    echo -e "${RED}ERROR: ESLint not found. Run: uv run ci/setup-js-linting-fast.py${NC}"
    exit 1
fi

# Find JavaScript files in WASM platform
JS_FILES=$(find src/platforms/wasm -name "*.js" -type f 2>/dev/null)

if [ -z "$JS_FILES" ]; then
    echo -e "${YELLOW}WARNING: No JavaScript files found in src/platforms/wasm/${NC}"
    exit 0
fi

echo -e "${BLUE}Found JavaScript files:${NC}"
echo "$JS_FILES" | sed 's/^/  /'

# Run ESLint
echo -e "${BLUE}Running ESLint...${NC}"
cd .js-tools

# Use the platform-appropriate ESLint executable
ESLINT_EXEC=""
if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" || "$OSTYPE" == "win32" ]]; then
    ESLINT_EXEC="./node_modules/.bin/eslint.cmd"
else
    ESLINT_EXEC="./node_modules/.bin/eslint"
fi

if "$ESLINT_EXEC" --no-eslintrc --no-inline-config -c .eslintrc.js ../src/platforms/wasm/compiler/*.js ../src/platforms/wasm/compiler/modules/*.js; then
    echo -e "${GREEN}SUCCESS: JavaScript linting completed successfully${NC}"
else
    echo -e "${RED}ERROR: JavaScript linting failed${NC}"
    exit 1
fi
