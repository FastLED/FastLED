#!/bin/bash
set -ex
uv venv --python 3.11
uv pip install -e . --refresh-package fastled
# This is needed to force the installation to finalize.
uv run python -c "import os; _ = os.getcwd()"
set +e

# if ./activate exists, remove it
if [ -f activate ]; then
    rm activate
fi
# symlink activate to .venv/bin/activate on linux/mac and .venv/Scripts/activate on windows
if [[ "$OSTYPE" == "linux-gnu"* || "$OSTYPE" == "darwin"* ]]; then
    ln -s .venv/bin/activate activate
else
    ln -s .venv/Scripts/activate activate
fi

echo "Setting up C++ development environment..."

# Build tests to generate compile_commands.json for clangd
echo "Building C++ tests to generate compile_commands.json..."
uv run ci/compiler/cpp_test_run.py --compile-only --clang --test test_function

# Copy compile_commands.json to project root for clangd IntelliSense
if [ -f tests/.build/compile_commands.json ]; then
    echo "Copying compile_commands.json for clangd support..."
    cp tests/.build/compile_commands.json compile_commands.json
    echo "‚úÖ clangd support enabled - IntelliSense should work in VSCode"
else
    echo "‚ö†Ô∏è  Warning: compile_commands.json not found. Tests may not have built successfully."
fi

echo "Setting up JavaScript development environment..."

# Install fast JavaScript linter (Node.js + ESLint)
echo "Installing fast JavaScript linter (Node.js + ESLint)..."
if uv run ci/setup-js-linting-fast.py; then
    echo "‚úÖ Fast JavaScript linting enabled - 53x faster than Deno!"
else
    echo "‚ö†Ô∏è  Warning: JavaScript linter setup failed. You can retry with: uv run ci/setup-js-linting-fast.py"
fi

echo "Setting up VSCode extensions..."

# Install Auto Debug extension from local .vsix file
echo "Installing Auto Debug extension for VSCode..."
if [ -f .vscode/DarrenLevine.auto-debug-1.0.2.vsix ]; then
    installed_count=0
    
    # Try installing on VSCode
    if command -v code &> /dev/null; then
        echo "Installing Auto Debug extension on VSCode..."
        if code --install-extension .vscode/DarrenLevine.auto-debug-1.0.2.vsix; then
            echo "‚úÖ Auto Debug extension installed successfully on VSCode!"
            installed_count=$((installed_count + 1))
        else
            echo "‚ö†Ô∏è  Warning: Auto Debug extension installation failed on VSCode."
        fi
    else
        echo "‚ÑπÔ∏è  VSCode not found (code command not available)."
    fi
    
    # Try installing on Cursor
    if command -v cursor &> /dev/null; then
        echo "Installing Auto Debug extension on Cursor..."
        if cursor --install-extension .vscode/DarrenLevine.auto-debug-1.0.2.vsix; then
            echo "‚úÖ Auto Debug extension installed successfully on Cursor!"
            installed_count=$((installed_count + 1))
        else
            echo "‚ö†Ô∏è  Warning: Auto Debug extension installation failed on Cursor."
        fi
    else
        echo "‚ÑπÔ∏è  Cursor not found (cursor command not available)."
    fi
    
    # Summary
    if [ $installed_count -eq 0 ]; then
        echo "‚ö†Ô∏è  Warning: Auto Debug extension could not be installed automatically."
        echo "      Please install manually:"
        echo "      - Open VSCode/Cursor"
        echo "      - Go to Extensions (Ctrl+Shift+X)"
        echo "      - Click ... menu ‚Üí Install from VSIX"
        echo "      - Select: .vscode/DarrenLevine.auto-debug-1.0.2.vsix"
    elif [ $installed_count -eq 1 ]; then
        echo "‚úÖ Auto Debug extension installed on 1 editor."
    else
        echo "‚úÖ Auto Debug extension installed on $installed_count editors!"
    fi
else
    echo "‚ö†Ô∏è  Warning: Auto Debug extension file not found at .vscode/DarrenLevine.auto-debug-1.0.2.vsix"
    echo "      Please ensure the extension file is in the correct location."
fi

echo "üéâ Installation complete!"
echo ""
echo "To use:"
echo "  - Run tests: bash test"
echo "  - Run linting: bash lint (Python, C++, and JavaScript)"
echo "  - Debug in VSCode: Open test file and press F5"
echo "  - Auto Debug: Use 'üéØ Auto Debug (Smart File Detection)' configuration"
echo "  - clangd IntelliSense: Should work automatically in VSCode"
